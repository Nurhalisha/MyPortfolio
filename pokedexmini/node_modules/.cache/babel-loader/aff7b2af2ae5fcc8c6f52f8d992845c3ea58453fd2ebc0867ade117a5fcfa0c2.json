{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\pokedex\\\\pokedexmini\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport Pokedex from './components/Pokedex';\nimport Team from './components/Team';\nimport Battle from './components/Battle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [team, setTeam] = useState([]);\n  const [battleStarted, setBattleStarted] = useState(false);\n  const [playerPokemon, setPlayerPokemon] = useState(null);\n  const [opponentPokemon, setOpponentPokemon] = useState(null);\n  const [battleResult, setBattleResult] = useState(null);\n  const addToTeam = pokemon => {\n    if (team.length >= 6) {\n      alert(\"You can only have 6 Pokémon on your team!\");\n      return;\n    }\n    if (team.find(p => p.id === pokemon.id)) {\n      alert(\"This Pokémon is already on your team!\");\n      return;\n    }\n    setTeam([...team, pokemon]);\n  };\n  const handleStartBattle = () => {\n    if (team.length < 2) {\n      alert(\"You need at least 2 Pokémon on your team to start a battle.\");\n      return;\n    }\n    // Randomly select the two Pokémon for battle\n    const player = team[0]; // Select the first Pokémon in the team\n    const opponent = team[1]; // Select the second Pokémon in the team\n    setPlayerPokemon(player);\n    setOpponentPokemon(opponent);\n    setBattleStarted(true);\n  };\n  const handleBattleEnd = winner => {\n    setBattleResult(winner);\n    setBattleStarted(false); // Set battleStarted to false after the battle ends\n  };\n  const handleNewBattle = () => {\n    setBattleResult(null); // Reset the result\n    setPlayerPokemon(null); // Reset the player Pokémon\n    setOpponentPokemon(null); // Reset the opponent Pokémon\n    setBattleStarted(false); // Reset battle started state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"My Team (\", team.length, \"/6)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Team, {\n      team: team\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pokedex, {\n      onAddToTeam: addToTeam\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), team.length >= 2 && !battleStarted && !battleResult && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartBattle,\n      style: {\n        marginTop: '1rem'\n      },\n      children: \"Start Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), battleStarted && playerPokemon && opponentPokemon && /*#__PURE__*/_jsxDEV(Battle, {\n      playerPokemon: playerPokemon,\n      opponentPokemon: opponentPokemon,\n      onBattleEnd: handleBattleEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), battleResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Battle Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Winner: \", battleResult.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewBattle,\n        children: \"Start New Battle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Zd7bpLVVmE91YauJhlpZniW61FA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Pokedex","Team","Battle","jsxDEV","_jsxDEV","App","_s","team","setTeam","battleStarted","setBattleStarted","playerPokemon","setPlayerPokemon","opponentPokemon","setOpponentPokemon","battleResult","setBattleResult","addToTeam","pokemon","length","alert","find","p","id","handleStartBattle","player","opponent","handleBattleEnd","winner","handleNewBattle","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddToTeam","onClick","marginTop","onBattleEnd","name","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/pokedex/pokedexmini/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport Pokedex from './components/Pokedex';\r\nimport Team from './components/Team';\r\nimport Battle from './components/Battle';\r\n\r\nconst App = () => {\r\n  const [team, setTeam] = useState([]);\r\n  const [battleStarted, setBattleStarted] = useState(false);\r\n  const [playerPokemon, setPlayerPokemon] = useState(null);\r\n  const [opponentPokemon, setOpponentPokemon] = useState(null);\r\n  const [battleResult, setBattleResult] = useState(null);\r\n\r\n  const addToTeam = (pokemon) => {\r\n    if (team.length >= 6) {\r\n      alert(\"You can only have 6 Pokémon on your team!\");\r\n      return;\r\n    }\r\n    if (team.find(p => p.id === pokemon.id)) {\r\n      alert(\"This Pokémon is already on your team!\");\r\n      return;\r\n    }\r\n    setTeam([...team, pokemon]);\r\n  };\r\n\r\n  const handleStartBattle = () => {\r\n    if (team.length < 2) {\r\n      alert(\"You need at least 2 Pokémon on your team to start a battle.\");\r\n      return;\r\n    }\r\n    // Randomly select the two Pokémon for battle\r\n    const player = team[0]; // Select the first Pokémon in the team\r\n    const opponent = team[1]; // Select the second Pokémon in the team\r\n    setPlayerPokemon(player);\r\n    setOpponentPokemon(opponent);\r\n    setBattleStarted(true);\r\n  };\r\n\r\n  const handleBattleEnd = (winner) => {\r\n    setBattleResult(winner);\r\n    setBattleStarted(false); // Set battleStarted to false after the battle ends\r\n  };\r\n\r\n  const handleNewBattle = () => {\r\n    setBattleResult(null); // Reset the result\r\n    setPlayerPokemon(null); // Reset the player Pokémon\r\n    setOpponentPokemon(null); // Reset the opponent Pokémon\r\n    setBattleStarted(false); // Reset battle started state\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <Header />\r\n      <h2>My Team ({team.length}/6)</h2>\r\n      <Team team={team} />\r\n      <Pokedex onAddToTeam={addToTeam} />\r\n      \r\n      {/* Render Start Battle button only if we have at least two Pokémon */}\r\n      {team.length >= 2 && !battleStarted && !battleResult && (\r\n        <button onClick={handleStartBattle} style={{ marginTop: '1rem' }}>\r\n          Start Battle\r\n        </button>\r\n      )}\r\n\r\n      {/* Render the Battle component if battle has started */}\r\n      {battleStarted && playerPokemon && opponentPokemon && (\r\n        <Battle \r\n          playerPokemon={playerPokemon} \r\n          opponentPokemon={opponentPokemon} \r\n          onBattleEnd={handleBattleEnd} \r\n        />\r\n      )}\r\n\r\n      {/* Render the result of the battle and the 'Start New Battle' button */}\r\n      {battleResult && (\r\n        <div>\r\n          <h3>Battle Over!</h3>\r\n          <h4>Winner: {battleResult.name}</h4>\r\n          <button onClick={handleNewBattle}>Start New Battle</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}